shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
boardState <- tibble(
c1 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 1, e = 1, s = 1, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0)
),
c2 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 1, w = 1),
tibble(n = 1, e = 1, s = 0, w = 0)
),
c3 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 1, s = 0, w = 1)
),
c4 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 1, s = 1, w = 0),
tibble(n = 1, e = 0, s = 0, w = 1)
),
c5 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 1, e = 0, s = 1, w = 1),
tibble(n = 0, e = 0, s = 0, w = 0)
)
)
current_row <- 1
current_col <- 1
query <- sprintf("UPDATE GameState SET img_num=%n, n=%n, s=%n, e=%n, w=%n WHERE cell_number=%n", c(num_id, boardState[[current_col]][[current_row]], cell_number))
num_id = 11
query <- sprintf("UPDATE GameState SET img_num=%n, n=%n, s=%n, e=%n, w=%n WHERE cell_number=%n", c(num_id, boardState[[current_col]][[current_row]], cell_number))
cell_number = 5
query <- sprintf("UPDATE GameState SET img_num=%n, n=%n, s=%n, e=%n, w=%n WHERE cell_number=%n", c(num_id, boardState[[current_col]][[current_row]], cell_number))
query <- sprintf("UPDATE GameState SET img_num=%n, n=%n, s=%n, e=%n, w=%n WHERE cell_number=%n", c(num_id, boardState[[current_col]][[current_row]][['n']], boardState[[current_col]][[current_row]][['s']], boardState[[current_col]][[current_row]][['e']], boardState[[current_col]][[current_row]][['w']], cell_number))
query <- sprintf("UPDATE GameState SET img_num=%n, n=%n, s=%n, e=%n, w=%n WHERE cell_number=%n", (num_id, boardState[[current_col]][[current_row]][['n']], boardState[[current_col]][[current_row]][['s']], boardState[[current_col]][[current_row]][['e']], boardState[[current_col]][[current_row]][['w']], cell_number))
query <- sprintf("UPDATE GameState SET img_num=%i, n=%i, s=%i, e=%i, w=%i WHERE cell_number=%i", (num_id, boardState[[current_col]][[current_row]][['n']], boardState[[current_col]][[current_row]][['s']], boardState[[current_col]][[current_row]][['e']], boardState[[current_col]][[current_row]][['w']], cell_number))
query <- sprintf("UPDATE GameState SET img_num=%i, n=%i, s=%i, e=%i, w=%i WHERE cell_number=%i", num_id, boardState[[current_col]][[current_row]][['n']], boardState[[current_col]][[current_row]][['s']], boardState[[current_col]][[current_row]][['e']], boardState[[current_col]][[current_row]][['w']], cell_number)
View(boardState)
View(boardState[[1]][[1]])
boardState[[1]][[1]][["n"]] <- 1
query <- sprintf("UPDATE GameState SET img_num=%i, n=%i, s=%i, e=%i, w=%i WHERE cell_number=%i", num_id, boardState[[current_col]][[current_row]][['n']], boardState[[current_col]][[current_row]][['s']], boardState[[current_col]][[current_row]][['e']], boardState[[current_col]][[current_row]][['w']], cell_number)
runApp()
a, b, c = c(1, 2, 3)
a b c
conn <- getAWSConnection()
result <- dbGetQuery(conn, "SELECT * FROM GameState")
dbDisconnect(conn)
conn <- getAWSConnection()
runApp()
runApp()
View(boardState)
View(boardState[[1]][[1]])
View(boardState)
View(boardState[[1]][[2]])
boardState <- tibble(
c1 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0)
),
c2 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0)
),
c3 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0)
),
c4 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0)
),
c5 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0)
)
)
current_row <- 1
current_col <- 1
runApp()
View(boardState)
View(boardState[[1]][[2]])
View(boardState[[1]][[2]])
View(boardState[[1]][[1]])
runApp()
View(boardState[[1]][[2]])
View(boardState[[2]][[2]])
boardState <- tibble(
c1 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 1, e = 1, s = 1, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0)
),
c2 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0)
),
c3 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0)
),
c4 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 0, e = 0, s = 0, w = 0)
),
c5 = list(
tibble(n = 0, e = 0, s = 0, w = 0),
tibble(n = 1, e = 0, s = 1, w = 1),
tibble(n = 0, e = 0, s = 0, w = 0)
)
)
runApp()
View(boardState)
View(boardState[[1]][[2]])
View(boardState[[2]][[2]])
View(boardState[[1]][[3]])
View(boardState[[4]][[2]])
print(boardLogic(boardState))
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
cellCheck <- function(df, col, row, prevConn){
print(paste0(col, row, prevConn))
if (col == 1 & row == 2){
return(TRUE)
}
cell <- df[[col]][[row]]
for (cell_dir in c("n", "s", "e", "w")){
if (cell_dir != prevConn){
if (cell[cell_dir] == 1){
if (row-1 == 0){
if (column -1 == 0){
if (cell_dir == "s"){return(cellCheck(df, col, row+1, "n"))}
if (cell_dir == "e"){return(cellCheck(df, col+1, row, "w"))}
}
else if (column +1 ==6){
if (cell_dir == "s"){return(cellCheck(df, col, row+1, "n"))}
if (cell_dir == "w"){return(cellCheck(df, col-1, row, "e"))}
}
else {
if (cell_dir == "s"){return(cellCheck(df, col, row+1, "n"))}
if (cell_dir == "e"){return(cellCheck(df, col+1, row, "w"))}
if (cell_dir == "w"){return(cellCheck(df, col-1, row, "e"))}
}
}
else if (row+1 == 4){
if (column - 1 == 0){
if (cell_dir == "n"){return(cellCheck(df, col, row-1, "s"))}
if (cell_dir == "e"){return(cellCheck(df, col+1, row, "w"))}
}
else if (column +1 == 4){
if (cell_dir == "n"){return(cellCheck(df, col, row-1, "s"))}
if (cell_dir == "w"){return(cellCheck(df, col-1, row, "e"))}
}
else {
if (cell_dir == "n"){return(cellCheck(df, col, row-1, "s"))}
if (cell_dir == "e"){return(cellCheck(df, col+1, row, "w"))}
if (cell_dir == "w"){return(cellCheck(df, col-1, row, "e"))}
}
else{
if (cell_dir == "n"){return(cellCheck(df, col, row-1, "s"))}
if (cell_dir == "s"){return(cellCheck(df, col, row+1, "n"))}
if (cell_dir == "e"){return(cellCheck(df, col+1, row, "w"))}
if (cell_dir == "w"){return(cellCheck(df, col-1, row, "e"))}
}
}
}
}
}
}
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sprintf("UPDATE GameState SET img_num = 1, n = 0, s = 0, w = 0, e = 0 WHERE cell_number==%d", i
sprintf("UPDATE GameState SET img_num = 1, n = 0, s = 0, w = 0, e = 0 WHERE cell_number==%d", i
i = 0
sprintf("UPDATE GameState SET img_num = 1, n = 0, s = 0, w = 0, e = 0 WHERE cell_number==%d", i)
for (i in c(1:15)){print(i)}
runApp()
runApp()
runApp()
runApp()
